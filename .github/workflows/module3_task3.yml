---
name: module3_task3

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set bash shell
        run: echo "SHELL=/bin/bash" >> $GITHUB_ENV

      - name: Install Hugo
        run: sudo apt-get install hugo

      - name: Setup Hugo
        run: |
          cd module3_task2/
          sudo ./setup.sh

      - name: lint
        run: |
          cd ./module3_task2/
          make lint

      - name: Validate Makefile
        run: cd ./module3_task2/ && make help

      - name: build
        run: |
          cd ./module3_task2/
          make build
          make package

      - name: help
        run: |
          make -C ${{ github.workspace }}/module3_task2/ help

      - name: post
        run: |
          cd ./module3_task2/
          make post POST_NAME=who-are-we POST_TITLE="Who are we" post

      - name: Integration test
        run: |
          cd ./module3_task2/
          make unit-tests
          make integration-tests
          make package
          make validate
          make clean

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_version="${GITHUB_REF#refs/tags/}"
          release_name="Release $release_version"
          release_body=$(cat ./module3_task3/DEPLOY.md)
          echo "Creating GitHub Release: $release_name"
          response=$(curl -s --request POST \
            --url "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" \
            --header "Authorization: Bearer ${GITHUB_TOKEN}" \
            --data '{
              "tag_name": "'"${release_version}"'",
              "name": "'"${release_name}"'",
              "body": "'"${release_body}"'",
              "draft": false,
              "prerelease": false
            }')
          upload_url=$(echo "$response" | jq -r .upload_url | cut -d "{" -f 1)
          echo "Upload URL: $upload_url"

          echo "Uploading awesome-website.zip..."
          curl -s -X POST \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/zip" \
            --data-binary "@./module3_task3/awesome-website.zip" \
            "$upload_url?name=awesome-website.zip"

      - name: clean
        run: |
          cd ./module3_task3/
          make clean
