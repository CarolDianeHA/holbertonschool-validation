name: module3_task3

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Match version tags like 'v1.0.0'
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-22.04

    steps:
      # ... Previous steps

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_version="${GITHUB_REF#refs/tags/}"
          release_name="Release $release_version"
          release_body=$(cat ./module3_task3/DEPLOY.md)
          echo "Creating GitHub Release: $release_name"
          response=$(curl -s --request POST \
            --url "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" \
            --header "Authorization: Bearer ${GITHUB_TOKEN}" \
            --data '{
              "tag_name": "'"${release_version}"'",
              "name": "'"${release_name}"'",
              "body": "'"${release_body}"'",
              "draft": false,
              "prerelease": false
            }')
          upload_url=$(echo "$response" | jq -r .upload_url | cut -d "{" -f 1)
          echo "Upload URL: $upload_url"

          echo "Uploading awesome-website.zip..."
          curl -s -X POST \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Content-Type: application/zip" \
            --data-binary "@./module3_task3/awesome-website.zip" \
            "$upload_url?name=awesome-website.zip"

      - name: Cleanup
        run: |
          cd ./module3_task3/
          make clean
